const line = require('../line');
describe('tests',()=> {
    test('straight line horizontal', () => {
        expect(line.line([
            [' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' '],
            ['X', '-', '-', '-', '-', '-', '-', '-', '-', '-', 'X'],
            [' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' '],
            [' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ']
        ])).toBe(true);
    });

    test('straight line vertical', () => {
        expect(line.line([
            [' ', ' ', ' ', ' ', ' '],
            [' ', ' ', 'X', ' ', ' '],
            [' ', ' ', '|', ' ', ' '],
            [' ', ' ', '|', ' ', ' '],
            [' ', ' ', 'X', ' ', ' ']
        ])).toBe(true);
    });

    test('connecting lines', () => {
        expect(line.line([
            [ ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ' ],
            [ ' ', ' ', ' ', ' ', ' ', '+', '-', '-', '-', '-', '-', '-', '-', '-', '+', ' ', ' ', ' ', ' ', ' ' ],
            [ ' ', ' ', 'X', '-', '-', '+', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '+', '-', '-', '+', ' ', ' ' ],
            [ ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '|', ' ', ' ' ],
            [ ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', 'X', ' ', ' ' ],
            [ ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ' ]
        ])).toBe(true);
    });

    test('connecting lines 2', () => {
        expect(line.line([
            [ ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ' ],
            [ ' ', ' ', ' ', ' ', '+', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '+', ' ', ' ' ],
            [ ' ', ' ', ' ', ' ', '|', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '|', ' ', ' ' ],
            [ ' ', 'X', '-', '-', '+', ' ', ' ', ' ', ' ', ' ', ' ', 'X', '-', '-', '-', '-', '-', '-', '+', ' ', ' ' ],
            [ ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ' ]
        ])).toBe(true);
    });

    test('connecting lines 3', () => {
        expect(line.line([
            [ ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ' ],
            [ ' ', ' ', ' ', '+', '-', '-', '-', '-', '-', '-', '-', '+', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ' ],
            [ ' ', ' ', ' ', '|', ' ', ' ', ' ', ' ', ' ', ' ', '+', '+', '+', '-', '-', '-', '+', ' ', ' ', ' ', ' ', ' ' ],
            [ 'X', '-', '-', '+', ' ', ' ', ' ', ' ', ' ', ' ', '+', '-', '+', ' ', ' ', ' ', 'X', ' ', ' ', ' ', ' ', ' ', ' ' ]
        ])).toBe(true);
    });

    test('Interrupted line Horizontal should be false', () => {
        expect(line.line([
            [
                [ 'X', '-', '-', '-', '-', '-', '|', '-', '-', '-', '-', 'X' ]
            ]
        ])).toBe(false);
    });

    test('Interrupted line Vertical should be false', () => {
        expect(line.line([
            [
                [ ' ', 'X', ' ', ' ' ],
                [ ' ', '|', ' ', ' ' ],
                [ ' ', '+', ' ', ' ' ],
                [ ' ', 'X', ' ', ' ' ]
            ]
        ])).toBe(false);
    });

    test('Interrupted line Vertical should be false', () => {
        expect(line.line([
            [
                [ ' ', 'X', ' ', ' ' ],
                [ ' ', '|', ' ', ' ' ],
                [ ' ', '+', ' ', ' ' ],
                [ ' ', 'X', ' ', ' ' ]
            ]
        ])).toBe(false);
    });
})